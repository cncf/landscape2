{
  "title": "Landscape settings JSON schema",
  "description": "The settings file allows customizing some aspects of the landscape",
  "type": "object",
  "properties": {
    "foundation": {
      "title": "Foundation",
      "description": "Name of the foundation. This value is used in some labels, so we recommended to keep it as short as possible",
      "type": "string",
      "examples": ["CNCF"]
    },
    "url": {
      "title": "URL",
      "description": "URL where the landscape will be hosted",
      "type": "string",
      "format": "uri",
      "examples": ["https://landscape.cncf.io"]
    },
    "analytics": {
      "title": "Analytics",
      "description": "Analytics providers configuration. When an analytics provider is set up, some additional code from the provider will be injected into the web application.",
      "type": "object",
      "properties": {
        "gtm": {
          "title": "Google Tag Manager configuration",
          "type": "object",
          "properties": {
            "container_id": {
              "title": "Landscape web application container ID",
              "type": "string",
              "pattern": "^GTM-.*",
              "examples": ["GTM-XXXXX"]
            }
          }
        }

      }
    },
    "base_path": {
      "title": "Base path",
      "description": "Base path where the landscape will be hosted. By default the generated landscape is prepared to be hosted at the root of the domain. However, if the landscape will be hosted in a subpath, this value must be set accordingly",
      "type": "string",
      "pattern": "^/.*",
      "examples": ["/base_path"]
    },
    "categories": {
      "title": "Categories",
      "description": "Categories information is read from the `landscape.yml` data file. The way categories are displayed in the web application is computed dynamically based on the number of categories and subcategories, as well as the number of items on each. Sometimes, however, we may want subcategories to be displayed in a specific order within a category (this happens often in the Members category). In those cases, it is possible to define that order by overriding a category. This option can also be used to not display one or more subcategories in some sections of the landscape (grid mode: excluded subcategories won't be displayed | card mode: items in excluded subcategories won't be displayed when filtering by group or classifying by category). To achieve that, we only need to exclude the subcategory from the subcategories list when overriding a category.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Category name",
            "type": "string",
            "examples": ["Category 1"]
          },
          "subcategories": {
            "title": "Subcategories",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["Subcategory 1", "Subcategory 2"]
            }
          }
        },
        "required": ["name", "subcategories"]
      }
    },
    "colors": {
      "title": "Colors",
      "description": "Colors used across the landscape UI. The colors section is optional but, when provided, all colors must be provided. Colors must be specified using the following format: \"rgba(<RED>, <GREEN>, <BLUE>, <ALPHA>)\".",
      "type": "object",
      "properties": {
        "color1": {
          "$ref": "#/$defs/color",
          "title": "Color 1",
          "description": "Buttons, groups, links",
          "type": "string",
          "examples": ["rgba(0, 107, 204, 1)"]
        },
        "color2": {
          "$ref": "#/$defs/color",
          "title": "Color 2",
          "description": "Some highlighted items like filters button, search icon",
          "type": "string",
          "examples": ["rgba(214, 34, 147, 1)"]
        },
        "color3": {
          "$ref": "#/$defs/color",
          "title": "Color 3",
          "description": "Participation stats bars, spinners, modal titles",
          "type": "string",
          "examples": ["rgba(96, 149, 214, 1)"]
        },
        "color4": {
          "$ref": "#/$defs/color",
          "title": "Color 4",
          "description": "Categories titles in filters, fieldset in filters modal",
          "type": "string",
          "examples": ["rgba(0, 42, 81, 0.7)"]
        },
        "color5": {
          "$ref": "#/$defs/color",
          "title": "Color 5",
          "description": "Categories and subcategories frames (odd)",
          "type": "string",
          "examples": ["rgba(1, 107, 204, 0.7)"]
        },
        "color6": {
          "$ref": "#/$defs/color",
          "title": "Color 6",
          "description": "Categories and subcategories frames (even)",
          "type": "string",
          "examples": ["rgba(0, 42, 81, 0.7)"]
        },
        "color7": {
          "$ref": "#/$defs/color",
          "title": "Color 7",
          "description": "Borders, shadows and options boxes in games",
          "type": "string",
          "examples": ["rgba(180, 219, 255, 1)"]
        }
      },
      "required": ["color1", "color2", "color3", "color4", "color5", "color6", "color7"]
    },
    "enduser": {
      "title": "End user",
      "description": "This section allows defining what items should be marked as `end user` based on the category and subcategory they belong to. If the `enduser` field has been set on a given item, that value will take precedence.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "category": {
            "title": "Category name",
            "description": "Category that should be marked as `end user`",
            "type": "string",
            "examples": ["Category 1"]
          },
          "subcategories": {
            "title": "Subcategories",
            "description": "Subcategories that should be marked as `end user`",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["Subcategory 1"]
            }
          }
        }
      }
    },
    "featured_items": {
      "title": "Featured items",
      "description": "This section allows highlighting items that match certain criteria. You can define a list of rules and the matching items will be featured in a special way in the landscape. Each rule must define a field for the check as well as the values that will trigger a match. At the moment the fields supported are: maturity and subcategory. When a given item's field matches any of the values provided, it will be considered a featured item. For each option, it is possible to also define an order (which item would be displayed first) and a label for the item",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "field": {
            "title": "Field",
            "type": "string",
            "enum": ["maturity", "subcategory"],
            "examples": ["maturity", "subcategory"]
          },
          "options": {
            "title": "Options",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "title": "Maturity status or subcategory name",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["graduated", "Subcategory 1"]
                },
                "order": {
                  "title": "Order",
                  "description": "Order in which the item should be displayed",
                  "type": "integer",
                  "examples": [1]
                },
                "label": {
                  "title": "Label",
                  "description": "Label to be displayed in the item",
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Graduated project", "Subcategory 1"]
                }
              },
              "required": ["value"]
            },
            "minItems": 1
          }
        },
        "required": ["field", "options"]
      },
      "minItems": 1
    },
    "footer": {
      "title": "Footer",
      "description": "This section allows customizing some aspects of the footer",
      "type": "object",
      "properties": {
        "links": {
          "type": "object",
          "properties": {
            "facebook": {
              "title": "Facebook URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?facebook.com/.*",
              "examples": ["https://www.facebook.com/url"]
            },
            "flickr": {
              "title": "Flickr URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?flickr.com/.*",
              "examples": ["https://www.flickr.com/url"]
            },
            "github": {
              "title": "GitHub URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?github.com/.*",
              "examples": ["https://github.com/owner/repo"]
            },
            "homepage": {
              "title": "Homepage URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://.*",
              "examples": ["https://example.com"]
            },
            "instagram": {
              "title": "Instagram URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?instagram.com/.*",
              "examples": ["https://www.instagram.com/url"]
            },
            "linkedin": {
              "title": "LinkedIn URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?linkedin.com/.*",
              "examples": ["https://www.linkedin.com/url"]
            },
            "slack": {
              "title": "Slack URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://.*",
              "examples": ["https://example.slack.com"]
            },
            "twitch": {
              "title": "Twitch URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?twitch.tv/.*",
              "examples": ["https://www.twitch.tv/url"]
            },
            "twitter": {
              "title": "Twitter URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?(twitter|x).com/.*",
              "examples": ["https://www.twitter.com/url", "https://x.com/url"]
            },
            "wechat": {
              "title": "WeChat URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://.*",
              "examples": ["https://example.com"]
            },
            "youtube": {
              "title": "YouTube URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?youtube.com/.*",
              "examples": ["https://www.youtube.com/url"]
            }
          }
        },
        "logo": {
          "title": "Logo",
          "description": "Logo to be displayed in the footer",
          "type": "string",
          "format": "uri",
          "examples": ["https://example.com/logo.svg"]
        },
        "text": {
          "title": "Text",
          "description": "Text to be displayed in the footer",
          "type": "string",
          "minLength": 1,
          "examples": ["Copyright © 2025 The Linux Foundation®. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our [Trademark Usage page](https://www.linuxfoundation.org/trademark-usage). Linux is a registered trademark of Linus Torvalds. [Privacy Policy](https://www.linuxfoundation.org/privacy) and [Terms of Use](https://www.linuxfoundation.org/terms). This website contains data received from Crunchbase. This data is not licensed pursuant to the Apache License. It is subject to Crunchbase's Data Access Terms, available at <https://data.crunchbase.com/docs/terms>, and is only permitted to be used with Linux Foundation landscape projects."]
        }
      }
    },
    "grid_items_size": {
      "title": "Grid items size",
      "description": "Defines the preferred size of the landscape items in the grid mode. When the landscape contains many items, it is recommended to use the `small` size. However, if there aren't many items, choosing `medium` or `large` may make the landscape look nicer. Users will still be able to adjust the items size from the UI using the zoom controls",
      "type": "string",
      "enum": ["small", "medium", "large"],
      "examples": ["small"]
    },
    "groups": {
      "title": "Groups",
      "description": "In some cases, specially when a landscape contains lots of items, it may be interesting to organize them in groups. Each group will be displayed on a different tab in the landscape web application. Each entry must contain the name of the group (it will be displayed as is) and a list with the categories (as defined in the landscape.yml data file) that will be part of this group. When groups are used, categories not listed in any group won't be displayed in the grid mode",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Group name",
            "type": "string",
            "minLength": 1,
            "examples": ["Group 1"]
          },
          "categories": {
            "title": "Categories",
            "type": "array",
            "items": {
              "type": "string",
              "examples": ["Category 1"]
            }
          }
        }
      }
    },
    "header": {
      "title": "Header",
      "description": "This section allows customizing some aspects of the header",
      "type": "object",
      "properties": {
        "links": {
          "type": "object",
          "properties": {
            "github": {
              "title": "GitHub URL",
              "type": "string",
              "format": "uri",
              "pattern": "^https?://(www\\.)?github.com/.*",
              "examples": ["https://github.com/owner/repo"]
            }
          }
        },
        "logo": {
          "title": "Foundation logo featured on the header",
          "type": "string",
          "format": "uri",
          "examples": ["https://example.com/logo.svg"]
        }
      }
    },
    "images": {
      "title": "Images",
      "description": "Urls of some images used in the landscape UI",
      "type": "object",
      "properties": {
        "favicon": {
          "title": "Favicon image url",
          "type": "string",
          "format": "uri",
          "pattern": "^https?://.*",
          "examples": ["https://example.com/favicon.ico"]
        },
        "open_graph": {
          "title": "Open Graph image url",
          "type": "string",
          "format": "uri",
          "pattern": "^https?://.*",
          "examples": ["https://example.com/logo.svg"]
        }
      }
    },
    "logos_viewbox": {
      "title": "Logos viewbox",
      "description": "In order to display the logos as large as possible in the landscape, during the build process we try to update their viewbox if `adjust` is set to true (by default it is when this setting is not provided). However, sometimes this does not help and logos may not be displayed correctly. In those cases, it is possible to exclude some of them from being adjusted by adding the logo(s) file name to the `exclude` list",
      "type": "object",
      "properties": {
        "adjust": {
          "title": "Adjust",
          "description": "Whether the logos viewbox should be adjusted or not",
          "type": "boolean",
          "examples": [true]
        },
        "exclude": {
          "title": "Exclude",
          "description": "List of logos file names that should be excluded from the viewbox adjustment",
          "type": "array",
          "items": {
            "type": "string",
            "examples": ["logo1.svg", "logo2.svg"]
          }
        }
      }
    },
    "members_category": {
      "title": "Name of the members category",
      "description": "Landscapes usually have a special category dedicated to the members of the corresponding foundation. It is possible to use any name for that category, but it is important that we define it here as there are some special operations that depend on it",
      "type": "string",
      "minLength": 1,
      "examples": ["Members"]
    },
    "osano": {
      "title": "Osano",
      "description": "Osano cookies consent form configuration. When the Osano configuration is provided, some additional code will be injected into the web application. The `customer_id` and `customer_configuration_id` fields values can be obtained from the url in the configuration script code available on the Osano site: https://cmp.osano.com/<CUSTOMER_ID>/<CUSTOMER_CONFIGURATION_ID>/osano.js",
      "type": "object",
      "properties": {
        "customer_id": {
          "title": "Customer ID",
          "type": "string",
          "minLength": 1,
          "examples": ["16A0DbT9yDNIaQkvZ"]
        },
        "customer_configuration_id": {
          "title": "Customer configuration ID",
          "type": "string",
          "minLength": 1,
          "examples": ["c3494b1e-ff3a-436f-978d-842e9a0bed27"]
        }
      },
      "required": ["customer_id", "customer_configuration_id"]
    },
    "screenshot_width": {
      "title": "Screenshot width",
      "description": "Width of the landscape screenshots automatically generated (in pixels). Screenshots won't be taken if this value is not provided",
      "type": "integer",
      "default": 1500,
      "minimun": 1000,
      "examples": [1500, 3000]
    },
    "tags": {
      "title": "TAGs",
      "description": "Projects items can specify which TAGs owns them in the `landscape.yml` file (by using the `tag` field in the `extra` item's section). However, sometimes this information is not available at the item level. This configuration section provides a mechanism to automatically asign a TAG to projects items based on the categories and subcategories they belong to. For example, we can define that all projects in the category <CATEGORY1> are owned by <TAG1>. When the items are processed, the corresponding TAG will be set in the items that match the rule defined. The TAG defined at the item level always takes precedence, so when it's present it won't be replaced. NOTE: TAGs names should only use lowercase case letters and hyphens (no spaces or other characters), and should not be prefixed with \"tag\". The subcategories field is optional and, when omitted, all of them will be included.",
      "type": "object",
      "patternProperties": {
        "^[a-z0-9-]+$": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "category": {
                "title": "Category",
                "type": "string",
                "minLength": 1,
                "examples": ["Category 1"]
              },
              "subcategories": {
                "title": "Subcategories",
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "examples": ["Subcategory 1"]
                }
              }
            },
            "required": ["category"]
          },
          "minItems": 0
        }
      }
    },
    "upcoming_event": {
      "title": "Upcoming event",
      "description": "This section allows configuring an upcoming event that will be featured on the landscape web application. Expired events won't be displayed",
      "type": "object",
      "properties": {
        "name": {
          "title": "Event name",
          "type": "string",
          "examples": ["Event 1"]
        },
        "start": {
          "title": "Event start date",
          "type": "string",
          "format": "date",
          "examples": ["2025-01-01"]
        },
        "end": {
          "title": "Event end date",
          "type": "string",
          "format": "date",
          "examples": ["2025-01-14"]
        },
        "banner_url": {
          "title": "Event banner URL",
          "type": "string",
          "format": "uri",
          "examples": ["https://example.com/banner.jpg"]
        },
        "details_url": {
          "title": "Event details URL",
          "type": "string",
          "format": "uri",
          "examples": ["https://example.com"]
        }
      }
    },
    "view_mode": {
      "title": "View mode",
      "description": "This section allows customizing the default view mode of the landscape web application. The view mode can be set to either `grid` or `card`. When omitted, the default view mode is `grid`",
      "type": "string",
      "enum": ["grid", "card"],
      "examples": ["grid"]
    }
  },
  "required": ["foundation", "url"],
  "$defs": {
    "color": {
      "pattern": "^rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)\\)$"
    }
  }
}
